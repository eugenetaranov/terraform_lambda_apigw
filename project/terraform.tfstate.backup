{
  "version": 4,
  "terraform_version": "0.12.21",
  "serial": 168,
  "lineage": "2afdcb35-123e-9dc7-da8c-84c0cfee72a8",
  "outputs": {
    "api_arn": {
      "value": "arn:aws:execute-api:us-east-1:829968223664:z3gxsglnld",
      "type": "string"
    },
    "api_gw_url": {
      "value": "https://z3gxsglnld.execute-api.us-east-1.amazonaws.com",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.lambda_authorizer",
      "mode": "data",
      "type": "archive_file",
      "name": "lambda",
      "provider": "provider.archive",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "fb9bc63ab225818f571c1111ec0bcd5768b2c2e0",
            "output_base64sha256": "tpiU5tYjBhXWpN5TbkxOs88KodiR1aOHzvAqWuVSnqE=",
            "output_md5": "9a6f06f99d757cf264c640cbc7b15b75",
            "output_path": "lambda_src/authorizer.py.zip",
            "output_sha": "fb9bc63ab225818f571c1111ec0bcd5768b2c2e0",
            "output_size": 463,
            "source": [],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": "lambda_src/authorizer.py",
            "type": "zip"
          }
        }
      ]
    },
    {
      "module": "module.lambda_root_get",
      "mode": "data",
      "type": "archive_file",
      "name": "lambda",
      "provider": "provider.archive",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "612d2e6916e9d9c577e552a24e563e913a5834ad",
            "output_base64sha256": "Xo9vHLPVEqs2/oLPS7Lz2Z9knTnDUYr0MEMAVxssdNM=",
            "output_md5": "c8bb33e8fa1529e11bd3b822317d644e",
            "output_path": "lambda_src/handler.py.zip",
            "output_sha": "612d2e6916e9d9c577e552a24e563e913a5834ad",
            "output_size": 287,
            "source": [],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": "lambda_src/handler.py",
            "type": "zip"
          }
        }
      ]
    },
    {
      "module": "module.apigw",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "authorizer_assume_role",
      "each": "list",
      "provider": "module.apigw.provider.aws",
      "instances": []
    },
    {
      "module": "module.apigw",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "authorizer_role",
      "each": "list",
      "provider": "module.apigw.provider.aws",
      "instances": []
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "lambda_assume_role",
      "each": "list",
      "provider": "module.lambda_authorizer.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3693445097",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.lambda_root_get",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "lambda_assume_role",
      "each": "list",
      "provider": "module.lambda_root_get.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3693445097",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "lambda_role",
      "each": "list",
      "provider": "module.lambda_authorizer.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "679537320",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.lambda_root_get",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "lambda_role",
      "each": "list",
      "provider": "module.lambda_root_get.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "679537320",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.apigw",
      "mode": "managed",
      "type": "aws_api_gateway_authorizer",
      "name": "api",
      "each": "list",
      "provider": "module.apigw.provider.aws",
      "instances": []
    },
    {
      "module": "module.apigw",
      "mode": "managed",
      "type": "aws_api_gateway_deployment",
      "name": "test",
      "provider": "module.apigw.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_date": "2020-04-23T17:30:39Z",
            "description": "",
            "execution_arn": "arn:aws:execute-api:us-east-1:829968223664:z3gxsglnld/test",
            "id": "ni9a0l",
            "invoke_url": "https://z3gxsglnld.execute-api.us-east-1.amazonaws.com/test",
            "rest_api_id": "z3gxsglnld",
            "stage_description": null,
            "stage_name": "test",
            "variables": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.apigw.aws_api_gateway_integration.lambda",
            "module.apigw.aws_api_gateway_integration.lambda_root",
            "module.apigw.aws_api_gateway_method.proxy",
            "module.apigw.aws_api_gateway_method.proxy_root",
            "module.apigw.aws_api_gateway_rest_api.api",
            "module.lambda_root_get.aws_lambda_function.lambda"
          ]
        }
      ]
    },
    {
      "module": "module.apigw",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "lambda",
      "provider": "module.apigw.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "i22d5b",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "ANY",
            "id": "agi-z3gxsglnld-i22d5b-ANY",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_templates": {},
            "resource_id": "i22d5b",
            "rest_api_id": "z3gxsglnld",
            "timeout_milliseconds": 29000,
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:829968223664:function:lambda-handler/invocations"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.apigw.aws_api_gateway_method.proxy",
            "module.apigw.aws_api_gateway_rest_api.api",
            "module.lambda_root_get.aws_lambda_function.lambda"
          ]
        }
      ]
    },
    {
      "module": "module.apigw",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "lambda_root",
      "provider": "module.apigw.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "ahdxqucug0",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "ANY",
            "id": "agi-z3gxsglnld-ahdxqucug0-ANY",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_templates": {},
            "resource_id": "ahdxqucug0",
            "rest_api_id": "z3gxsglnld",
            "timeout_milliseconds": 29000,
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:829968223664:function:lambda-handler/invocations"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.apigw.aws_api_gateway_method.proxy_root",
            "module.apigw.aws_api_gateway_rest_api.api",
            "module.lambda_root_get.aws_lambda_function.lambda"
          ]
        }
      ]
    },
    {
      "module": "module.apigw",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "proxy",
      "provider": "module.apigw.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "ANY",
            "id": "agm-z3gxsglnld-i22d5b-ANY",
            "request_models": {},
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_validator_id": "",
            "resource_id": "i22d5b",
            "rest_api_id": "z3gxsglnld"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.apigw.aws_api_gateway_authorizer.api",
            "module.apigw.aws_api_gateway_resource.proxy",
            "module.apigw.aws_api_gateway_rest_api.api"
          ]
        }
      ]
    },
    {
      "module": "module.apigw",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "proxy_root",
      "provider": "module.apigw.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "ANY",
            "id": "agm-z3gxsglnld-ahdxqucug0-ANY",
            "request_models": {},
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_validator_id": "",
            "resource_id": "ahdxqucug0",
            "rest_api_id": "z3gxsglnld"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.apigw.aws_api_gateway_authorizer.api",
            "module.apigw.aws_api_gateway_rest_api.api"
          ]
        }
      ]
    },
    {
      "module": "module.apigw",
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "proxy",
      "provider": "module.apigw.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "i22d5b",
            "parent_id": "ahdxqucug0",
            "path": "/{proxy+}",
            "path_part": "{proxy+}",
            "rest_api_id": "z3gxsglnld"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.apigw.aws_api_gateway_rest_api.api"
          ]
        }
      ]
    },
    {
      "module": "module.apigw",
      "mode": "managed",
      "type": "aws_api_gateway_rest_api",
      "name": "api",
      "provider": "module.apigw.provider.aws",
      "instances": [
        {
          "status": "tainted",
          "schema_version": 0,
          "attributes": {
            "api_key_source": "HEADER",
            "arn": "arn:aws:apigateway:us-east-1::/restapis/z3gxsglnld",
            "binary_media_types": [],
            "body": null,
            "created_date": "2020-04-23T17:26:46Z",
            "description": "",
            "endpoint_configuration": [
              {
                "types": [
                  "REGIONAL"
                ],
                "vpc_endpoint_ids": []
              }
            ],
            "execution_arn": "arn:aws:execute-api:us-east-1:829968223664:z3gxsglnld",
            "id": "z3gxsglnld",
            "minimum_compression_size": -1,
            "name": "test",
            "policy": "",
            "root_resource_id": "ahdxqucug0",
            "tags": {}
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "lambda",
      "provider": "module.lambda_authorizer.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:829968223664:log-group:/aws/lambda/lambda-authorizer:*",
            "id": "/aws/lambda/lambda-authorizer",
            "kms_key_id": "",
            "name": "/aws/lambda/lambda-authorizer",
            "name_prefix": null,
            "retention_in_days": 1,
            "tags": {}
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.lambda_root_get",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "lambda",
      "provider": "module.lambda_root_get.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:829968223664:log-group:/aws/lambda/lambda-handler:*",
            "id": "/aws/lambda/lambda-handler",
            "kms_key_id": "",
            "name": "/aws/lambda/lambda-handler",
            "name_prefix": null,
            "retention_in_days": 1,
            "tags": {}
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.apigw",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "authorizer",
      "each": "list",
      "provider": "module.apigw.provider.aws",
      "instances": []
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda_role",
      "each": "list",
      "provider": "module.lambda_authorizer.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::829968223664:role/lambda-authorizer-lambda",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-04-23T17:41:33Z",
            "description": "",
            "force_detach_policies": false,
            "id": "lambda-authorizer-lambda",
            "max_session_duration": 3600,
            "name": "lambda-authorizer-lambda",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "unique_id": "AROA4CPPWBWYJAEXHSP3R"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.lambda_root_get",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda_role",
      "each": "list",
      "provider": "module.lambda_root_get.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::829968223664:role/lambda-handler-lambda",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-04-23T12:04:45Z",
            "description": "",
            "force_detach_policies": false,
            "id": "lambda-handler-lambda",
            "max_session_duration": 3600,
            "name": "lambda-handler-lambda",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "unique_id": "AROA4CPPWBWYLACBUE3LA"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.apigw",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "authorizer_role_policy",
      "each": "list",
      "provider": "module.apigw.provider.aws",
      "instances": []
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "lambda_role_policy",
      "each": "list",
      "provider": "module.lambda_authorizer.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "lambda-authorizer-lambda:lambda-authorizer-lambda",
            "name": "lambda-authorizer-lambda",
            "name_prefix": null,
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "role": "lambda-authorizer-lambda"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda_authorizer.aws_iam_role.lambda_role"
          ]
        }
      ]
    },
    {
      "module": "module.lambda_root_get",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "lambda_role_policy",
      "each": "list",
      "provider": "module.lambda_root_get.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "lambda-handler-lambda:lambda-handler-lambda",
            "name": "lambda-handler-lambda",
            "name_prefix": null,
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "role": "lambda-handler-lambda"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda_root_get.aws_iam_role.lambda_role"
          ]
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "lambda",
      "provider": "module.lambda_authorizer.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-east-1:829968223664:function:lambda-authorizer",
            "dead_letter_config": [],
            "description": "lambda authrozier for APIGW",
            "environment": [],
            "filename": "lambda_src/authorizer.py.zip",
            "function_name": "lambda-authorizer",
            "handler": "authorizer.lambda_handler",
            "id": "lambda-authorizer",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:829968223664:function:lambda-authorizer/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-04-23T17:41:45.238+0000",
            "layers": [],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:829968223664:function:lambda-authorizer:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::829968223664:role/lambda-authorizer-lambda",
            "runtime": "python3.8",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "tpiU5tYjBhXWpN5TbkxOs88KodiR1aOHzvAqWuVSnqE=",
            "source_code_size": 463,
            "tags": {},
            "timeout": 30,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.lambda_authorizer.aws_iam_role.lambda_role"
          ]
        }
      ]
    },
    {
      "module": "module.lambda_root_get",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "lambda",
      "provider": "module.lambda_root_get.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-east-1:829968223664:function:lambda-handler",
            "dead_letter_config": [],
            "description": "lambda handler for APIGW",
            "environment": [],
            "filename": "lambda_src/handler.py.zip",
            "function_name": "lambda-handler",
            "handler": "handler.lambda_handler",
            "id": "lambda-handler",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:829968223664:function:lambda-handler/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-04-23T17:42:41.707+0000",
            "layers": [],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:829968223664:function:lambda-handler:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::829968223664:role/lambda-handler-lambda",
            "runtime": "python3.8",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "Xo9vHLPVEqs2/oLPS7Lz2Z9knTnDUYr0MEMAVxssdNM=",
            "source_code_size": 287,
            "tags": {},
            "timeout": 30,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.lambda_root_get.aws_iam_role.lambda_role"
          ]
        }
      ]
    },
    {
      "module": "module.apigw",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "api",
      "provider": "module.apigw.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "arn:aws:lambda:us-east-1:829968223664:function:lambda-handler",
            "id": "AllowAPIGatewayInvoke",
            "principal": "apigateway.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:829968223664:z3gxsglnld/*/*",
            "statement_id": "AllowAPIGatewayInvoke",
            "statement_id_prefix": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.apigw.aws_api_gateway_rest_api.api",
            "module.lambda_root_get.aws_iam_role.lambda_role",
            "module.lambda_root_get.aws_lambda_function.lambda"
          ]
        }
      ]
    }
  ]
}
